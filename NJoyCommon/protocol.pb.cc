// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Axis;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Button;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_JoyData;
}  // namespace protobuf_protocol_2eproto
namespace NJoy {
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class AxisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Axis>
      _instance;
} _Axis_default_instance_;
class ButtonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Button>
      _instance;
} _Button_default_instance_;
class HatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hat>
      _instance;
} _Hat_default_instance_;
class JoyDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoyData>
      _instance;
  const ::NJoy::Ping* ping_;
  const ::NJoy::Axis* axis_;
  const ::NJoy::Button* button_;
  const ::NJoy::Hat* hat_;
} _JoyData_default_instance_;
class JoyListDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoyListData>
      _instance;
} _JoyListData_default_instance_;
}  // namespace NJoy
namespace protobuf_protocol_2eproto {
static void InitDefaultsPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_Ping_default_instance_;
    new (ptr) ::NJoy::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing}, {}};

static void InitDefaultsAxis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_Axis_default_instance_;
    new (ptr) ::NJoy::Axis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::Axis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Axis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAxis}, {}};

static void InitDefaultsButton() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_Button_default_instance_;
    new (ptr) ::NJoy::Button();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::Button::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Button =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsButton}, {}};

static void InitDefaultsHat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_Hat_default_instance_;
    new (ptr) ::NJoy::Hat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::Hat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHat}, {}};

static void InitDefaultsJoyData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_JoyData_default_instance_;
    new (ptr) ::NJoy::JoyData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::JoyData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_JoyData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsJoyData}, {
      &protobuf_protocol_2eproto::scc_info_Ping.base,
      &protobuf_protocol_2eproto::scc_info_Axis.base,
      &protobuf_protocol_2eproto::scc_info_Button.base,
      &protobuf_protocol_2eproto::scc_info_Hat.base,}};

static void InitDefaultsJoyListData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NJoy::_JoyListData_default_instance_;
    new (ptr) ::NJoy::JoyListData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NJoy::JoyListData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JoyListData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJoyListData}, {
      &protobuf_protocol_2eproto::scc_info_JoyData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Ping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Axis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Button.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoyData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoyListData.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Ping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Ping, token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Axis, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Axis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Axis, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Axis, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Button, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Button, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Button, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Button, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Hat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Hat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Hat, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::Hat, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyData, type_),
  offsetof(::NJoy::JoyDataDefaultTypeInternal, ping_),
  offsetof(::NJoy::JoyDataDefaultTypeInternal, axis_),
  offsetof(::NJoy::JoyDataDefaultTypeInternal, button_),
  offsetof(::NJoy::JoyDataDefaultTypeInternal, hat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyData, test_oneof_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyListData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyListData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NJoy::JoyListData, data_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::NJoy::Ping)},
  { 7, 14, sizeof(::NJoy::Axis)},
  { 16, 23, sizeof(::NJoy::Button)},
  { 25, 32, sizeof(::NJoy::Hat)},
  { 34, 45, sizeof(::NJoy::JoyData)},
  { 50, 56, sizeof(::NJoy::JoyListData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_Axis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_Button_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_Hat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_JoyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NJoy::_JoyListData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016protocol.proto\022\004NJoy\"\025\n\004Ping\022\r\n\005token\030"
      "\001 \002(\005\"$\n\004Axis\022\r\n\005index\030\001 \002(\005\022\r\n\005value\030\002 "
      "\002(\005\"&\n\006Button\022\r\n\005index\030\001 \002(\005\022\r\n\005value\030\002 "
      "\002(\010\"#\n\003Hat\022\r\n\005index\030\001 \002(\005\022\r\n\005value\030\002 \002(\005"
      "\"\251\001\n\007JoyData\022\036\n\004type\030\001 \002(\0162\020.NJoy.Update"
      "Type\022\032\n\004ping\030\002 \001(\0132\n.NJoy.PingH\000\022\032\n\004axis"
      "\030\003 \001(\0132\n.NJoy.AxisH\000\022\036\n\006button\030\004 \001(\0132\014.N"
      "Joy.ButtonH\000\022\030\n\003hat\030\005 \001(\0132\t.NJoy.HatH\000B\014"
      "\n\ntest_oneof\"*\n\013JoyListData\022\033\n\004data\030\001 \003("
      "\0132\r.NJoy.JoyData*5\n\nUpdateType\022\010\n\004PING\020\001"
      "\022\010\n\004AXIS\020\002\022\n\n\006BUTTON\020\003\022\007\n\003HAT\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 431);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protocol_2eproto
namespace NJoy {
const ::google::protobuf::EnumDescriptor* UpdateType_descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_enum_descriptors[0];
}
bool UpdateType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_Ping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_ = from.token_;
  // @@protoc_insertion_point(copy_constructor:NJoy.Ping)
}

void Ping::SharedCtor() {
  token_ = 0;
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:NJoy.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_Ping.base);
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.Ping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 token = 1;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->token());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    set_token(from.token());
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  swap(token_, other->token_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Axis::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Axis::kIndexFieldNumber;
const int Axis::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Axis::Axis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_Axis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.Axis)
}
Axis::Axis(const Axis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:NJoy.Axis)
}

void Axis::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

Axis::~Axis() {
  // @@protoc_insertion_point(destructor:NJoy.Axis)
  SharedDtor();
}

void Axis::SharedDtor() {
}

void Axis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Axis::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Axis& Axis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_Axis.base);
  return *internal_default_instance();
}


void Axis::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.Axis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&index_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Axis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.Axis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.Axis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.Axis)
  return false;
#undef DO_
}

void Axis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.Axis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.Axis)
}

::google::protobuf::uint8* Axis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.Axis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.Axis)
  return target;
}

size_t Axis::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NJoy.Axis)
  size_t total_size = 0;

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_value()) {
    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  return total_size;
}
size_t Axis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.Axis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Axis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.Axis)
  GOOGLE_DCHECK_NE(&from, this);
  const Axis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Axis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.Axis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.Axis)
    MergeFrom(*source);
  }
}

void Axis::MergeFrom(const Axis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.Axis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Axis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.Axis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Axis::CopyFrom(const Axis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.Axis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Axis::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Axis::Swap(Axis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Axis::InternalSwap(Axis* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Axis::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Button::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Button::kIndexFieldNumber;
const int Button::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Button::Button()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_Button.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.Button)
}
Button::Button(const Button& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:NJoy.Button)
}

void Button::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

Button::~Button() {
  // @@protoc_insertion_point(destructor:NJoy.Button)
  SharedDtor();
}

void Button::SharedDtor() {
}

void Button::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Button::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Button& Button::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_Button.base);
  return *internal_default_instance();
}


void Button::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&index_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Button::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.Button)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.Button)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.Button)
  return false;
#undef DO_
}

void Button::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.Button)
}

::google::protobuf::uint8* Button::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.Button)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required bool value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.Button)
  return target;
}

size_t Button::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NJoy.Button)
  size_t total_size = 0;

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_value()) {
    // required bool value = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Button::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.Button)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required bool value = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Button::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.Button)
  GOOGLE_DCHECK_NE(&from, this);
  const Button* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Button>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.Button)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.Button)
    MergeFrom(*source);
  }
}

void Button::MergeFrom(const Button& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.Button)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Button::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Button::CopyFrom(const Button& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.Button)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Button::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Button::Swap(Button* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Button::InternalSwap(Button* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Button::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hat::kIndexFieldNumber;
const int Hat::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hat::Hat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_Hat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.Hat)
}
Hat::Hat(const Hat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:NJoy.Hat)
}

void Hat::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

Hat::~Hat() {
  // @@protoc_insertion_point(destructor:NJoy.Hat)
  SharedDtor();
}

void Hat::SharedDtor() {
}

void Hat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hat::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hat& Hat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_Hat.base);
  return *internal_default_instance();
}


void Hat::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.Hat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&index_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Hat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.Hat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.Hat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.Hat)
  return false;
#undef DO_
}

void Hat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.Hat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.Hat)
}

::google::protobuf::uint8* Hat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.Hat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.Hat)
  return target;
}

size_t Hat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NJoy.Hat)
  size_t total_size = 0;

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_value()) {
    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  return total_size;
}
size_t Hat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.Hat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int32 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.Hat)
  GOOGLE_DCHECK_NE(&from, this);
  const Hat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.Hat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.Hat)
    MergeFrom(*source);
  }
}

void Hat::MergeFrom(const Hat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.Hat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Hat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.Hat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hat::CopyFrom(const Hat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.Hat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Hat::Swap(Hat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hat::InternalSwap(Hat* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hat::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoyData::InitAsDefaultInstance() {
  ::NJoy::_JoyData_default_instance_.ping_ = const_cast< ::NJoy::Ping*>(
      ::NJoy::Ping::internal_default_instance());
  ::NJoy::_JoyData_default_instance_.axis_ = const_cast< ::NJoy::Axis*>(
      ::NJoy::Axis::internal_default_instance());
  ::NJoy::_JoyData_default_instance_.button_ = const_cast< ::NJoy::Button*>(
      ::NJoy::Button::internal_default_instance());
  ::NJoy::_JoyData_default_instance_.hat_ = const_cast< ::NJoy::Hat*>(
      ::NJoy::Hat::internal_default_instance());
}
void JoyData::set_allocated_ping(::NJoy::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ping, submessage_arena);
    }
    set_has_ping();
    test_oneof_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:NJoy.JoyData.ping)
}
void JoyData::set_allocated_axis(::NJoy::Axis* axis) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (axis) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      axis = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, axis, submessage_arena);
    }
    set_has_axis();
    test_oneof_.axis_ = axis;
  }
  // @@protoc_insertion_point(field_set_allocated:NJoy.JoyData.axis)
}
void JoyData::set_allocated_button(::NJoy::Button* button) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (button) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      button = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, button, submessage_arena);
    }
    set_has_button();
    test_oneof_.button_ = button;
  }
  // @@protoc_insertion_point(field_set_allocated:NJoy.JoyData.button)
}
void JoyData::set_allocated_hat(::NJoy::Hat* hat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (hat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hat, submessage_arena);
    }
    set_has_hat();
    test_oneof_.hat_ = hat;
  }
  // @@protoc_insertion_point(field_set_allocated:NJoy.JoyData.hat)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoyData::kTypeFieldNumber;
const int JoyData::kPingFieldNumber;
const int JoyData::kAxisFieldNumber;
const int JoyData::kButtonFieldNumber;
const int JoyData::kHatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoyData::JoyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_JoyData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.JoyData)
}
JoyData::JoyData(const JoyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_test_oneof();
  switch (from.test_oneof_case()) {
    case kPing: {
      mutable_ping()->::NJoy::Ping::MergeFrom(from.ping());
      break;
    }
    case kAxis: {
      mutable_axis()->::NJoy::Axis::MergeFrom(from.axis());
      break;
    }
    case kButton: {
      mutable_button()->::NJoy::Button::MergeFrom(from.button());
      break;
    }
    case kHat: {
      mutable_hat()->::NJoy::Hat::MergeFrom(from.hat());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:NJoy.JoyData)
}

void JoyData::SharedCtor() {
  type_ = 1;
  clear_has_test_oneof();
}

JoyData::~JoyData() {
  // @@protoc_insertion_point(destructor:NJoy.JoyData)
  SharedDtor();
}

void JoyData::SharedDtor() {
  if (has_test_oneof()) {
    clear_test_oneof();
  }
}

void JoyData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JoyData::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoyData& JoyData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_JoyData.base);
  return *internal_default_instance();
}


void JoyData::clear_test_oneof() {
// @@protoc_insertion_point(one_of_clear_start:NJoy.JoyData)
  switch (test_oneof_case()) {
    case kPing: {
      delete test_oneof_.ping_;
      break;
    }
    case kAxis: {
      delete test_oneof_.axis_;
      break;
    }
    case kButton: {
      delete test_oneof_.button_;
      break;
    }
    case kHat: {
      delete test_oneof_.hat_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void JoyData::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.JoyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 1;
  clear_test_oneof();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.JoyData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .NJoy.UpdateType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NJoy::UpdateType_IsValid(value)) {
            set_type(static_cast< ::NJoy::UpdateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NJoy.Ping ping = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NJoy.Axis axis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NJoy.Button button = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_button()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NJoy.Hat hat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.JoyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.JoyData)
  return false;
#undef DO_
}

void JoyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.JoyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NJoy.UpdateType type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  switch (test_oneof_case()) {
    case kPing:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_ping(), output);
      break;
    case kAxis:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_axis(), output);
      break;
    case kButton:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_button(), output);
      break;
    case kHat:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_hat(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.JoyData)
}

::google::protobuf::uint8* JoyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.JoyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .NJoy.UpdateType type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  switch (test_oneof_case()) {
    case kPing:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_ping(), deterministic, target);
      break;
    case kAxis:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_axis(), deterministic, target);
      break;
    case kButton:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_button(), deterministic, target);
      break;
    case kHat:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_hat(), deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.JoyData)
  return target;
}

size_t JoyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.JoyData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .NJoy.UpdateType type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  switch (test_oneof_case()) {
    // optional .NJoy.Ping ping = 2;
    case kPing: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_oneof_.ping_);
      break;
    }
    // optional .NJoy.Axis axis = 3;
    case kAxis: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_oneof_.axis_);
      break;
    }
    // optional .NJoy.Button button = 4;
    case kButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_oneof_.button_);
      break;
    }
    // optional .NJoy.Hat hat = 5;
    case kHat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_oneof_.hat_);
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.JoyData)
  GOOGLE_DCHECK_NE(&from, this);
  const JoyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.JoyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.JoyData)
    MergeFrom(*source);
  }
}

void JoyData::MergeFrom(const JoyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.JoyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
  switch (from.test_oneof_case()) {
    case kPing: {
      mutable_ping()->::NJoy::Ping::MergeFrom(from.ping());
      break;
    }
    case kAxis: {
      mutable_axis()->::NJoy::Axis::MergeFrom(from.axis());
      break;
    }
    case kButton: {
      mutable_button()->::NJoy::Button::MergeFrom(from.button());
      break;
    }
    case kHat: {
      mutable_hat()->::NJoy::Hat::MergeFrom(from.hat());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
}

void JoyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.JoyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoyData::CopyFrom(const JoyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.JoyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoyData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  switch (test_oneof_case()) {
    case kPing: {
      if (has_ping()) {
        if (!this->ping().IsInitialized()) return false;
      }
      break;
    }
    case kAxis: {
      if (has_axis()) {
        if (!this->axis().IsInitialized()) return false;
      }
      break;
    }
    case kButton: {
      if (has_button()) {
        if (!this->button().IsInitialized()) return false;
      }
      break;
    }
    case kHat: {
      if (has_hat()) {
        if (!this->hat().IsInitialized()) return false;
      }
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  return true;
}

void JoyData::Swap(JoyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoyData::InternalSwap(JoyData* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(test_oneof_, other->test_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JoyData::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoyListData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoyListData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoyListData::JoyListData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2eproto::scc_info_JoyListData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NJoy.JoyListData)
}
JoyListData::JoyListData(const JoyListData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NJoy.JoyListData)
}

void JoyListData::SharedCtor() {
}

JoyListData::~JoyListData() {
  // @@protoc_insertion_point(destructor:NJoy.JoyListData)
  SharedDtor();
}

void JoyListData::SharedDtor() {
}

void JoyListData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JoyListData::descriptor() {
  ::protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoyListData& JoyListData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2eproto::scc_info_JoyListData.base);
  return *internal_default_instance();
}


void JoyListData::Clear() {
// @@protoc_insertion_point(message_clear_start:NJoy.JoyListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoyListData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NJoy.JoyListData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NJoy.JoyData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NJoy.JoyListData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NJoy.JoyListData)
  return false;
#undef DO_
}

void JoyListData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NJoy.JoyListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NJoy.JoyData data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NJoy.JoyListData)
}

::google::protobuf::uint8* JoyListData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NJoy.JoyListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NJoy.JoyData data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NJoy.JoyListData)
  return target;
}

size_t JoyListData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NJoy.JoyListData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NJoy.JoyData data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoyListData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NJoy.JoyListData)
  GOOGLE_DCHECK_NE(&from, this);
  const JoyListData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoyListData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NJoy.JoyListData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NJoy.JoyListData)
    MergeFrom(*source);
  }
}

void JoyListData::MergeFrom(const JoyListData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NJoy.JoyListData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void JoyListData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NJoy.JoyListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoyListData::CopyFrom(const JoyListData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NJoy.JoyListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoyListData::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void JoyListData::Swap(JoyListData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoyListData::InternalSwap(JoyListData* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JoyListData::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NJoy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::Ping* Arena::CreateMaybeMessage< ::NJoy::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::Axis* Arena::CreateMaybeMessage< ::NJoy::Axis >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::Axis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::Button* Arena::CreateMaybeMessage< ::NJoy::Button >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::Button >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::Hat* Arena::CreateMaybeMessage< ::NJoy::Hat >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::Hat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::JoyData* Arena::CreateMaybeMessage< ::NJoy::JoyData >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::JoyData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NJoy::JoyListData* Arena::CreateMaybeMessage< ::NJoy::JoyListData >(Arena* arena) {
  return Arena::CreateInternal< ::NJoy::JoyListData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
